[build-system]
requires = ["setuptools>=68.0"]
build-backend = "setuptools.build_meta"

[project]
name = "npm-discovery"
version = "1.0.0"
description = "Comprehensive NPM package discovery, analysis, and exploration tool with dark UI"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Zeeeepa", email = "zeeeepa@gmail.com"}
]
keywords = ["npm", "package-manager", "discovery", "analysis", "libraries.io", "unpkg"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries",
    "Topic :: System :: Software Distribution",
]

dependencies = [
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "markdown>=3.5.0",
    "python-dateutil>=2.8.0",
    "humanize>=4.9.0",
    "diskcache>=5.6.0",
    "lxml>=5.0.0",  # For BeautifulSoup XML parsing
    "python-dotenv>=1.0.0",  # For .env file support
    "aiohttp>=3.9.0",  # For async HTTP requests
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "responses>=0.24.0",  # For mocking HTTP requests in tests
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "types-requests>=2.31.0",
    "types-beautifulsoup4>=4.12.0",
]

[project.scripts]
npm-tool = "npm.ui.app:main"

[project.urls]
Homepage = "https://github.com/Zeeeepa/npm_"
Repository = "https://github.com/Zeeeepa/npm_"
Issues = "https://github.com/Zeeeepa/npm_/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short --strict-markers"

[tool.ruff]
target-version = "py39"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # function call in argument defaults
]

[tool.ruff.per-file-ignores]
"tests/*" = ["B011"]  # assert False allowed in tests

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Enable gradually
ignore_missing_imports = true  # Until we add stubs for all deps
